# version: '3.8'

# volumes:
#   db_storage:
#   n8n_storage:
#   redis_storage:

x-shared: &shared
  restart: always
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=n8n-postgres
    - DB_POSTGRESDB_PORT=5432
    - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
    - DB_POSTGRESDB_USER=${POSTGRES_NON_ROOT_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_NON_ROOT_PASSWORD}
    - EXECUTIONS_MODE=queue
    - QUEUE_BULL_REDIS_HOST=n8n-redis
    - QUEUE_HEALTH_CHECK_ACTIVE=true
    - N8N_BASIC_AUTH_ACTIVE=false
    - N8N_SECURE_COOKIE=false
    - N8N_PROTOCOL=https
    - VUE_APP_URL_BASE_API=https://${N8N_HOST}
    - WEBHOOK_TUNNEL_URL=https://${N8N_HOST}
  links:
    - n8n-postgres
    - n8n-redis
  volumes:
    - ./n8n_storage:/home/node/
  depends_on:
    n8n-redis:
      condition: service_healthy
    n8n-postgres:
      condition: service_healthy

services:
  # https-portal:
  #   image: steveltn/https-portal:1
  #   ports:
  #     - '80:80'
  #     - '443:443'
  #   links:
  #     - n8n
  #   restart: always
  #   environment:
  #     DOMAINS: '${N8N_HOST} -> http://n8n:5678'
  #     STAGE: ${STAGE:-staging}
  #     FORCE_RENEW: 'true'
  #     CUSTOM_NGINX_SERVER_CONFIG_BLOCK: |
  #         proxy_buffering off;

  n8n-postgres:
    image: postgres:11
    restart: always
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
      - POSTGRES_NON_ROOT_USER
      - POSTGRES_NON_ROOT_PASSWORD
    volumes:
      - ./db_storage:/var/lib/postgresql/data
      - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n-redis:
    image: redis:6-alpine
    restart: always
    volumes:
      - ./redis_storage:/data
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n-nginx: # 可选，如果您需要一个反向代理
    image: nginx:latest
    ports:
      - "${APP_PORT}:80" # 将 Nginx 的 80 端口映射到主机的 APP_PORT
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - n8n
    restart: unless-stopped

  n8n:
    <<: *shared
    image: n8nio/n8n
    # command: /bin/sh -c "n8n start"
    ports:
     - 5678

  # n8n-worker:
  #   <<: *shared
  #   image: n8nio/n8n
  #   command: /bin/sh -c "sleep 5; n8n worker"
  #   depends_on:
  #     - n8n
